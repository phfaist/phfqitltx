
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{phfthm}[2016/03/08 phfthm package]

\RequirePackage{xkeyval}
\RequirePackage{etoolbox}

\RequirePackage{aliascnt}

\RequirePackage{amsmath}
\RequirePackage{amsthm}


%
% internal -- execute all definitions given in list of attributes
%
\def\phfthm@internal@execattribs#1#2#3{%
  %
  % #1 = prefix to look for attributes
  % 
  % #2 = name of what #1 represents, to use in message in case attribute is not found
  %
  % #3 = list of attributes
  %
  \@for\next:=#3\do{%
    \ifcsname #1\next\endcsname%
      \csname #1\next\endcsname%
    \else%
      \PackageWarning{phfthm}{Unknown #2: '\next'. Ignoring.}
    \fi
  }
}


\define@cmdkey{phfmkthm}{counter}{}
\define@boolkey{phfmkthm}{aliascounter}[true]{}
\define@cmdkey{phfmkthm}{thmstyle}{}
\define@boolkey{phfmkthm}{defnostar}[true]{} % define {thm} variant
\define@boolkey{phfmkthm}{defstar}[true]{} % define {thm*} variant


\newcommand\phfMakeTheorem[3][]{%
  % 
  %  #1 = [options]
  %  #2 = {theorem-codename}
  %  #3 = {Theorem Name}
  %
  %  e.g. \phfMakeTheorem[counter=thmcounter]{prop}{Proposition}
  %  
  %
  % Handle [options]
  % ----------------
  %
  % ensure defaults are set
  % 
  \KV@phfmkthm@aliascountertrue%
  \def\cmdKV@phfmkthm@counter{}%
  \def\cmdKV@phfmkthm@thmstyle{}%
  \KV@phfmkthm@defnostartrue%
  \KV@phfmkthm@defstartrue%
  %
  \setkeys{phfmkthm}{#1}% options
  %
  %
  % Now, implementation
  % -------------------
  % 
  % set style if requested
  %
  \if\relax\detokenize\expandafter{\cmdKV@phfmkthm@thmstyle}\relax% test if empty:
  %                                                              [http://tex.stackexchange.com/a/53091/32188]
  \else%
    \theoremstyle{\cmdKV@phfmkthm@thmstyle}%
  \fi%
  %
  % 
  % Probably make the default, unstarred version ?
  %
  \ifKV@phfmkthm@defnostar%
    %
    % separate counter?
    % 
    \if\relax\detokenize\expandafter{\cmdKV@phfmkthm@counter}\relax% tests if empty:
      %                                                              [http://tex.stackexchange.com/a/53091/32188]
      %
      % Use our own separate counter.
      %
      \newtheorem{phfthm@#2}{#3}%
      % 
      \csdef{phfthm@#2autorefname}{#3}%  for \autoref{}
      %
    \else%
      %
      % Use another counter.
      %
      \ifKV@phfmkthm@aliascounter%
        %
        % Make a distinct alias counter, e.g. for use with autoref.
        %
        \newaliascnt{#2}{\cmdKV@phfmkthm@counter}%
        \newtheorem{phfthm@#2}[#2]{#3}%
        \aliascntresetthe{#2}%
        % 
        \csdef{#2autorefname}{#3}%  for \autoref{}
        %
      \else%
        %
        % Directly instruct \newtheorem to use the other counter.  Does not work with \autoref.
        %
        \newtheorem{phfthm@#2}[\cmdKV@phfmkthm@counter]{#3}%
      \fi%
    \fi%
    %
    %
    \newenvironment{#2}[1][]{%
      \begin{phfthm@#2}[##1]%
        \begingroup%
          \csname phfthm@hook@start@#2\endcsname{##1}%
      }{%
          \csname phfthm@hook@end@#2\endcsname%
        \endgroup%
      \end{phfthm@#2}%
    }%
    %
    \csdef{phfthm@hook@start@#2}##1{\phfthm@hook@startcommonnostar{#2}{##1}}%
    \csdef{phfthm@hook@afterlabel@#2}{\phfthm@hook@afterlabelcommon{#2}}%
    \csdef{phfthm@hook@end@#2}{\phfthm@hook@endcommonnostar{#2}}%
    %
    %
  \fi%
  %
  %
  % Maybe make starred version ?
  %
  \ifKV@phfmkthm@defstar%
    \newtheorem*{phfthm@#2*}{#3}%
    \newenvironment{#2*}[1][]{%
      \begin{phfthm@#2*}[##1]%
        \begingroup%
          \csname phfthm@hook@start@#2*\endcsname{##1}%
      }{%
          \csname phfthm@hook@end@#2*\endcsname%
        \endgroup%
      \end{phfthm@#2*}%
    }%
    % 
  \fi%
  %
  \csdef{phfthm@hook@start@#2*}##1{\phfthm@hook@startcommonstar{#2}{##1}}%
  \csdef{phfthm@hook@end@#2*}{\phfthm@hook@endcommonstar{#2}}%
  %
  % 
}



% --------

\def\phfthm@hook@startcommonnostar#1#2{% #1 = "proposition", #2 = "Full Title of Proposition, if Given."
  %
  \phfthm@hook@startcommon{#1}{#2}%
  %
  \phfthm@def@label@thmlabel{#1}%
}
\def\phfthm@hook@endcommonnostar#1{\phfthm@hook@endcommon{#1}}


% --

\def\phfthm@hook@startcommonstar#1#2{% #1 = "proposition", #2 = "Full Title of Proposition, if Given."
  %
  \phfthm@hook@startcommon{#1}{#2}%
  %
  %  don't touch \label{}, in case it's used in inner environments such as {itemize}
}
\def\phfthm@hook@endcommonstar#1{%
}

% --

\def\phfthm@hook@startcommon#1#2{% #1 = "proposition", #2 = "Full Title of Proposition, if Given."
  %
  \postdisplaypenalty=10000\relax% avoid orphan line on new page after display equation
  %
}
\def\phfthm@hook@afterlabelcommon#1{}
\def\phfthm@hook@endcommon#1{}

% --------


\def\phfthm@def@label@thmlabel#1{% #1 = theorem type e.g. "proposition"
  \let\phfthm@old@label\label%
  \def\label{\phfthm@thmlabel{#1}}%
}
\def\phfthm@thmlabel#1#2{% theorem type, label name
  \def\phfthm@val@thmlabel{#2}% save the label name
  \phfthm@old@label{#2}% actually do the LaTeX \label{}
  \csname phfthm@hook@afterlabel@#1\endcsname%
  % and restore old \label definition for other items in the environment:
  \let\label\phfthm@old@label%
  \ignorespaces%
}








% ------------------------------------------------------------------------------
%
% Improved, smarter {proof} environment
%


\newcounter{phfthmproofcnt}

\newenvironment{phfthm@proof@inner}[1]{%
  \refstepcounter{phfthmproofcnt}%
  \phfthm@hook@start@proof{#1}%
  \phfthm@do@proofofwhat{#1}%
  \phfthm@hook@startpost@proof{#1}%
}{%
}


\def\phfthm@hook@start@proof#1{}%\def\baselinestretch{1.2}\footnotesize}
\def\phfthm@hook@startpost@proof#1{\hspace{1.5ex plus 0.5ex minus 0.2ex}}


\def\phfthm@do@proofofwhat#1{%
  \def\phfthm@val@proofoflabel{}%
  \def\phfthm@val@prooftitle{}%
  \if\relax\detokenize\expandafter{#1}\relax% #1 = empty ? 
    \phfthm@fmt@prooftitle{\proofname}%
  \else%
    \phfthm@do@proofofwhat@maybelabel#1\phfthm@do@proofofwhat@END%
    \phfthm@fmt@prooftitle{\proofofname{\phfthm@val@prooftitle}}%
  \fi%
  \if\relax\detokenize\expandafter{\phfthm@val@proofoflabel}\relax% proof of label = empty ?
  \else%
    \label{proof:\phfthm@val@proofoflabel}%  pin label of our own for this proof.
  \fi%
}

\def\phfthm@do@proofofwhat@maybelabel{%
  \@ifnextchar*\phfthm@do@proofofwhat@label\phfthm@do@proofofwhat@title%
}
\def\phfthm@do@proofofwhat@label*#1\phfthm@do@proofofwhat@END{%
  \edef\phfthm@val@proofoflabel{#1}%
  \def\phfthm@val@prooftitle{\phfthm@autoref{#1}}%
}
\def\phfthm@do@proofofwhat@title#1\phfthm@do@proofofwhat@END{%
  \def\phfthm@val@proofoflabel{}%
  \def\phfthm@val@prooftitle{#1}%
}


\def\phfthm@autoref{\ref} % provide \ref by default, will use \autoref if available:
\AtBeginDocument{%
  \@ifpackageloaded{hyperref}{\def\phfthm@autoref{\autoref}}{}
}

\def\phfthm@fmt@prooftitle#1{{\itshape#1.}}%
\def\proofofname#1{\proofname{} of #1}


\newenvironment{phfthm@proof}[1][]{%
  \par%
  \pushQED{\qed}%
  \normalfont\topsep6\p@\@plus6\p@\relax%
  \trivlist\item\relax%
  \begin{phfthm@proof@inner}{#1}%
  \ignorespaces%
}{%
  \popQED\endtrivlist\@endpefalse%
  \end{phfthm@proof@inner}%
}



% ------------------------------------------------

% proof ref machinery

\providecommand\proofonname[2]{Proof on #2.}

\def\noproofref{%
  \def\phfthm@val@noproofref{1}% if this is defined, then no proof ref should be generated for the current thmlabel
}

%
% This one may also be defined to take one argument, the proof ref text.
%
\def\proofrefsize{\footnotesize}

\def\phfthm@fmt@proofref#1#2{%
  %
  % #1 = theorem's label (e.g. "prop:1")
  % #2 = full reference (e.g. "page XYZ")
  % 
  {\parfillskip=0pt\relax% Thanks http://tex.stackexchange.com/a/43239/32188 !
    \hfil\hbox{\proofrefsize{(\proofonname{#1}{#2})}}\par}%
}

\def\phfthm@fmt@proofref@farback#1#2{\phfthm@fmt@proofref{#1}{#2}}
\def\phfthm@fmt@proofref@farahead#1#2{\phfthm@fmt@proofref{#1}{#2}}
\def\phfthm@fmt@proofref@closeby#1#2{}


% \def\phfthm@proofref@impl#1{%  SIMPLE VERSION
%   %
%   % #1 = referenced label
%   %
%   % Simplest version of this macro:
%   %
%   %The proof of this \phfthm@autorefnameof{#1} is given on \autopageref{proof:#1}.
%   %
%   \phfthm@fmt@proofref{\autopageref{proof:#1}}%
% }

\def\phfthm@proofref@warnnolabel{%
  \PackageWarning{phfthm}{No label provided for proof reference!}%
}

\def\phfthm@proofref@impl@thmlabel{%
  \ifdefined\phfthm@val@noproofref\relax%
    % "no proof ref" was explicitly specified
  \else%
    % make sure \phfthm@val@thmlabel is defined, maybe empty
    \providecommand\phfthm@val@thmlabel{}%
    % generate the proof reference for current thmlabel
    \edef\phfthm@tmpa{{\phfthm@val@thmlabel}}%
    \expandafter\notblank\phfthm@tmpa{%
      \expandafter\phfthm@proofref@impl\phfthm@tmpa%
    }{%
      \phfthm@proofref@warnnolabel% no label provided
    }%
  \fi%
}

%
% allow the proof to be this many pages away. Use -1 to force display of reference.
%
\newcommand\phfthmProofrefPageBackTolerance{1}
\newcommand\phfthmProofrefPageAheadTolerance{1}

\newcounter{phfthmInternalProofrefCounter}

\def\phfthm@proofref@impl#1{%
  %
  % #1 = referenced label
  %
  % Check to see if the proof is far away (further than on the next page).  Only if that's
  % the case, display the reference.
  %
  % See http://tex.stackexchange.com/a/2526 to test whether ref is on same page. Note that
  % was problematic, probably due to hyperref. I needed to use my own \phfthm@min@pageref
  % without any hyper linking mechanism in place.
  %
  \refstepcounter{phfthmInternalProofrefCounter}\label{internalproofref\thephfthmInternalProofrefCounter}%
  \edef\phfthm@proofref@tmp@proofpage{\phfthm@min@pageref{proof:#1}}%
  \edef\phfthm@proofref@tmp@thispage{\phfthm@min@pageref{internalproofref\thephfthmInternalProofrefCounter}}%
  \edef\phfthm@proofref@tmp@pagediff{\the\numexpr\phfthm@proofref@tmp@proofpage-\phfthm@proofref@tmp@thispage\relax}%
  \ifnum\numexpr\phfthm@proofref@tmp@pagediff\relax<\numexpr-\phfthmProofrefPageBackTolerance\relax%
    % far back
    \phfthm@fmt@proofref@farback{#1}{\autopageref{proof:#1}}%
  \else%
    \ifnum\numexpr\phfthm@proofref@tmp@pagediff\relax>\numexpr\phfthmProofrefPageAheadTolerance\relax%
      % far ahead
      \phfthm@fmt@proofref@farahead{#1}{\autopageref{proof:#1}}%
    \else%
      % close
      \phfthm@fmt@proofref@closeby{#1}{\autopageref{proof:#1}}%
    \fi%
  \fi%
%  [\number\numexpr\phfthm@proofref@tmp@proofpage\relax{} vs % DEBUG
%  \number\numexpr\phfthm@proofref@tmp@thispage\relax or % DEBUG
%  \number\numexpr1+\phfthm@proofref@tmp@thispage\relax] % DEBUG
}

\def\phfthm@autorefnameof#1{%
  % 
  % Extract the counter part of the reference `section.NN', which is 4th element in the
  % \r@label macro
  %
  % Code extracted from hyperref.sty
  % 
  \expandafter\ifx\csname r@#1\endcsname\relax%
    \textbf{??}%
  \else%
    \expandafter\expandafter\expandafter\phfthm@HyPsd@autorefname%
        \csname r@#1\endcsname{}{}{}{}\@nil%
  \fi%
}
\def\phfthm@HyPsd@autorefname#1#2#3#4#5\@nil{%
  \ifx\\#4\\%
  \else%
    \phfthm@HyPsd@@autorefname#4.\@nil%
  \fi%
}
\def\phfthm@HyPsd@@autorefname#1.#2\@nil{%
  \ltx@IfUndefined{#1autorefname}{%
    \ltx@IfUndefined{#1name}{%
    }{%
      \csname#1name\endcsname%
    }%
  }{%
    \csname#1autorefname\endcsname%
  }%
}

\def\phfthm@min@pageref#1{%
  \ifcsname r@#1\endcsname%
    %
    % Dark magic going on here. Copied from hyperref.sty, in "\def\HyPsd@@@pageref..."
    % 
    \expandafter\expandafter\expandafter\expandafter
    \expandafter\expandafter\expandafter\@car
    \expandafter\expandafter\expandafter\@gobble
    \csname r@#1\endcsname{}\@nil
  \else%
    0%
  \fi%
}




% ==============================================================================
%                    THEOREM HEADING MACHINERY
% ==============================================================================


\define@cmdkey{phfthmmkthmheading}{thmstyle}{}
\define@cmdkey{phfthmmkthmheading}{internalcounter}{}


\newcounter{phfthmheadingcounter}%

% 
% Creates a new environment \begin{thmheading}{Title} .... \end{thmheading} for
% customizing the heading on-the-fly. Useful for my formatting of definitions.
% 
% You can also use \label{...} and \ref{} which yields the title.
% 
\newcommand\phfthmMakeThmheadingEnvironment[2][]{%
  % 
  % #1 = options (thmstyle=xyz)
  % 
  % #2 = environment name
  %
  %
  % First, parse options:
  % 
  %   set defaults:
  %
  \def\cmdKV@phfthmmkthmheading@thmstyle{plain}%
  \def\cmdKV@phfthmmkthmheading@internalcounter{phfthmheadingcounter}%
  %
  %   manually given options:
  % 
  \setkeys{phfthmmkthmheading}{#1}%
  % 
  %
  % And the definitions, per se:
  %
  \csdef{phfthm@thmheading@#2@val@title}{$\langle$No Title Given$\rangle$}%
  \theoremstyle{\cmdKV@phfthmmkthmheading@thmstyle}%
  % 
  \newtheorem*{phfthm@internal@thmheading@#2}{\csname phfthm@thmheading@#2@val@title\endcsname}%
  %
  % define the relevant environment
  % 
  \newenvironment{#2}[1]{%
    \csdef{phfthm@thmheading@#2@val@title}{##1}%
    \letcs\thephfthmheadingcounter{phfthm@thmheading@#2@val@title}%
    \csname phfthm@internal@thmheading@#2\endcsname%
    % \hspace: see http://tex.stackexchange.com/a/88493/32188, especially the first comment
    \hspace*{0pt}\refstepcounter{\cmdKV@phfthmmkthmheading@internalcounter}%
    \csname phfthm@hook@thmheading@#2@start\endcsname{##1}%
    % add some flexibility in the hspace
    \hskip 0em plus 0.5em minus 0em%
    \ignorespaces%
  }{%
    \csname phfthm@hook@thmheading@#2@end\endcsname%
    \csname endphfthm@internal@thmheading@#2\endcsname%
  }%
  % 
  \csdef{phfthm@hook@thmheading@#2@start}##1{\phfthm@hook@thmheading@start{##1}}%
  \csdef{phfthm@hook@thmheading@#2@end}{\phfthm@hook@thmheading@end}%
  %
}

\def\phfthm@hook@thmheading@start#1{}
\def\phfthm@hook@thmheading@end{}






% ==============================================================================
%                    STYLES AND THEOREM SETS
% ==============================================================================


%
% Define theorem sets
%
\def\phfthm@def@thmset@optlist{}
\def\phfthm@def@thmset#1{\appto\phfthm@def@thmset@optlist{#1,}\csdef{phfthm@thmset@#1}}


% Note: should be defined by the package option processing mechanism: \phfthm@val@mkthmoptarg@{theorem|defn}
\def\phfthm@def@thmset@mktheorem{\expandafter\phfMakeTheorem\phfthm@val@mkthmoptarg@theorem}
\def\phfthm@def@thmset@mkdefn{\expandafter\phfMakeTheorem\phfthm@val@mkthmoptarg@defn}

\def\phfthm@thmset@{% empty set, name ''
}

\phfthm@def@thmset{empty}{
  % empty set, name 'empty'
}
\phfthm@def@thmset{simple}{
  \phfthm@def@thmset@mktheorem{theorem}{Theorem}
  \phfthm@def@thmset@mktheorem{proposition}{Proposition}
  \phfthm@def@thmset@mktheorem{lemma}{Lemma}
  \phfthm@def@thmset@mktheorem{corollary}{Corollary}
}
\phfthm@def@thmset{default}{
  \phfthm@def@thmset@mktheorem{theorem}{Theorem}
  \phfthm@def@thmset@mktheorem{proposition}{Proposition}
  \phfthm@def@thmset@mktheorem{lemma}{Lemma}
  \phfthm@def@thmset@mktheorem{corollary}{Corollary}
  \phfthm@def@thmset@mktheorem{conjecture}{Conjecture}
  \phfthm@def@thmset@mktheorem{remark}{Remark}
  \phfthm@def@thmset@mkdefn{definition}{Definition}
}
\phfthm@def@thmset{shortnames}{
  \phfthm@def@thmset@mktheorem{thm}{Theorem}
  \phfthm@def@thmset@mktheorem{prop}{Proposition}
  \phfthm@def@thmset@mktheorem{lem}{Lemma}
  \phfthm@def@thmset@mktheorem{cor}{Corollary}
  \phfthm@def@thmset@mktheorem{conj}{Conjecture}
  \phfthm@def@thmset@mktheorem{rem}{Remark}
  \phfthm@def@thmset@mkdefn{defn}{Definition}
}
\phfthm@def@thmset{rich}{

  \phfthm@thmset@default % the default set, plus:

  \phfthm@def@thmset@mktheorem{idea}{Idea}
  \phfthm@def@thmset@mktheorem{question}{Question}
  \phfthm@def@thmset@mktheorem{problem}{Problem}
}

\newcommand\phfthmLoadThmSet[3]{%
  % 
  % #1 = options for theorem definitions
  % #2 = options for definition definitions
  % #3 = name of the thm set to load
  %
  \ifcsname phfthm@thmset@#3\endcsname%
    \edef\phfthm@val@mkthmoptarg@theorem{#1}%
    \edef\phfthm@val@mkthmoptarg@defn{#2}%
    \csname phfthm@thmset@#3\endcsname%
  \else%
    \PackageWarning{phfthm}{Unknown theorem set: `#3'!}%
  \fi%
}


% ==============================================================================

%
% The machinery is in place, now define and parse the package options.
%

\define@boolkey{phfthmpkg}{smallproofs}[true]{}
\KV@phfthmpkg@smallproofstrue% true by default

\define@boolkey{phfthmpkg}{qedsymbolblacksquare}[true]{}
\KV@phfthmpkg@qedsymbolblacksquaretrue% true by default

\define@boolkey{phfthmpkg}{prooftitleitbf}[true]{}
\KV@phfthmpkg@prooftitleitbffalse% false by default

\define@boolkey{phfthmpkg}{sepcounters}[true]{}
\KV@phfthmpkg@sepcountersfalse% false by default

\define@boolkey{phfthmpkg}{thmheading}[true]{}
\KV@phfthmpkg@thmheadingtrue% set to true by default because these are only stand-alone definitions
\define@cmdkey{phfthmpkg}{thmheadingstyle}{}
\def\cmdKV@phfthmpkg@thmheadingstyle{plain}

%
% proof ref options
%
\newif\ifKV@phfthmpkg@proofref
\KV@phfthmpkg@proofreffalse% false by default
\def\cmdKV@phfthmpkg@proofref@style{}
\define@key{phfthmpkg}{proofref}[]{%
  \ifblank{#1}{%
    % blank argument provided, set some sensible defaults with proofref on:
    \KV@phfthmpkg@proofreftrue%
    \def\cmdKV@phfthmpkg@proofref@style{default}%
    %
  }{%
    \ifstrequal{#1}{false}{%
      \KV@phfthmpkg@proofreffalse%
    }{%
      \KV@phfthmpkg@proofreftrue%
      %
      % and set value:
      \def\cmdKV@phfthmpkg@proofref@style{#1}%
    }%
  }%
}


\define@key{phfthmpkg}{resetstyle}[]{%
  \KV@phfthmpkg@smallproofsfalse%
  \KV@phfthmpkg@qedsymbolblacksquarefalse%
  \KV@phfthmpkg@prooftitleitbffalse%
  \KV@phfthmpkg@sepcountersfalse%
  \KV@phfthmpkg@proofreffalse%
  % 
  \if\relax\detokenize{#1}\relax% expect empty arg.
  \else%
    \PackageWarning{phfthm}{'resetstyle' does not take any argument.}%
  \fi%
}



% \define@choicekey{phfthmpkg}{thmset}[\val]{\phfthm@def@thmset@optlist}{ ... but with expanded option list arg
\def\@tmpa{\define@choicekey{phfthmpkg}{thmset}[\val]}
\edef\@tmpb{{\phfthm@def@thmset@optlist}}
\expandafter\@tmpa\@tmpb{%
  \xdef\cmdKV@phfthmpkg@thmset{\val}%
}
\def\cmdKV@phfthmpkg@thmset{default}% by default, load the default set


%
% These set which theorem style to use for theorems and definitions, when loading the
% given thmset.
%
\define@cmdkey{phfthmpkg}{theoremstyle}{}
\def\cmdKV@phfthmpkg@theoremstyle{plain}
%
\define@cmdkey{phfthmpkg}{definitionstyle}{}
\def\cmdKV@phfthmpkg@definitionstyle{definition}


\DeclareOptionX*{%
  \PackageWarning{phfthm}{Invalid option: `\CurrentOption'}%
}
\ProcessOptionsX<phfthmpkg>


% ==============================================================================



%
% Now, execute options-controlled actions, such as defining theorem sets.
%




\ifKV@phfthmpkg@smallproofs
  \apptocmd\phfthm@hook@start@proof{\def\baselinestretch{1.2}\footnotesize}{}{%
    Failed to change command \string\phfthm@hook@start@proof}
\fi

\ifKV@phfthmpkg@qedsymbolblacksquare
  \RequirePackage{amssymb}
  \providecommand\filledsquare{\ensuremath{\blacksquare}}
  \renewcommand\qedsymbol{\text{\tiny\ensuremath{\filledsquare}}}
\fi

\ifKV@phfthmpkg@prooftitleitbf
  \def\phfthm@fmt@prooftitle#1{{\itshape\bfseries#1.}}
\fi

\ifKV@phfthmpkg@sepcounters
  \def\phfthm@val@mkthmopt@counteropts{}
\fi

\ifKV@phfthmpkg@proofref

  \def\phfthm@proofref@style@margin{%
    % 
    \def\phfthm@fmt@proofref##1##2{%
      % 
      % ##1 = full reference (e.g. "page XYZ")
      % 
      \marginpar{\proofrefsize{\proofonname{##1}{##2}}}%
    }%
  }
  \def\phfthm@proofref@style@default{}
  \def\phfthm@proofref@style@{}
  % 
  \def\phfthm@proofref@style@always{
    \def\phfthmProofrefPageBackTolerance{-1}
    \def\phfthmProofrefPageAheadTolerance{-1}
  }
  \def\phfthm@proofref@style@onlyifveryfar{
    \def\phfthmProofrefPageBackTolerance{2}
    \def\phfthmProofrefPageAheadTolerance{4}
  }
  % 
  \def\phfthm@proofref@style@longref{
    \def\proofonname##1##2{The proof of this \phfthm@autorefnameof{##1} can be found on ##2.}
    \def\phfthm@fmt@proofref##1##2{%
      % 
      % #1 = theorem's label (e.g. "prop:1")
      % #2 = full reference (e.g. "page XYZ")
      % 
      \par{\raggedleft\proofrefsize{(\proofonname{##1}{##2})}\par}%
    }
  }

  \def\phfthm@exec@proofrefstyles#1\phfthm@END{\phfthm@internal@execattribs{phfthm@proofref@style@}{ProofRef Style}{#1}}
  \expandafter\phfthm@exec@proofrefstyles\cmdKV@phfthmpkg@proofref@style\phfthm@END


  \let\phfthm@def@thmset@mktheorem@OLD\phfthm@def@thmset@mktheorem%
  \def\phfthm@def@thmset@mktheorem#1#2{% #1 = prop env name ("proposition"), #2 = prop title name ("Proposition")
    \phfthm@def@thmset@mktheorem@OLD{#1}{#2}%
    \expandafter\apptocmd\csname phfthm@hook@end@#1\endcsname{%
      \phfthm@proofref@impl@thmlabel%
    }{}{Failed to append to command `\expandafter\string\csname phfthm@hook@end@#1\endcsname!!}%
  }

\fi



%
% Common counter, in case we use a common counter for all thm types
%

\newcounter{phfthmcounter}
\setcounter{phfthmcounter}{0}

\ifdefined\phfthm@val@mkthmopt@counteropts% already defined by some above option, e.g. separate counters
\else

  % 
  % provide common counter
  %
  \def\phfthm@val@mkthmopt@counteropts{counter=phfthmcounter}

\fi


%
% load the theorem set defined by the options
%

\phfthmLoadThmSet%
{[\phfthm@val@mkthmopt@counteropts,thmstyle=\cmdKV@phfthmpkg@theoremstyle]}% opts for theorems
{[\phfthm@val@mkthmopt@counteropts,thmstyle=\cmdKV@phfthmpkg@definitionstyle]}% opts for definitions
{\cmdKV@phfthmpkg@thmset} % the theorem set


%
% Styling the proofs
%


%
% Save old {proof} environment provided by amsthm,
%
\let\phfthm@old@proof\proof
\let\endphfthm@old@proof\endproof
%
% and override it by our own:
%
\let\proof\phfthm@proof
\let\endproof\endphfthm@proof



\ifKV@phfthmpkg@thmheading % also set \cmdKV@phfthmpkg@thmheadingstyle

  \phfthmMakeThmheadingEnvironment[thmstyle=\cmdKV@phfthmpkg@thmheadingstyle]{thmheading}

\fi



